<html>
  <head>
    <meta charset="UTF-8" />

    <title>Homework 3</title>

    <style>
        body{
            font-family: 'Lato', 'Helvetica', sans-serif;
            margin: 20px;
            font-family: "Avenir", sans-serif;
        }

        h1 {
            display: flex;
            font-family: "Sinhala MN";
            text-align: center;
            align-self: center;
            align-content: center;
        }

        h1.title{
            font-family: "Avenir", sans-serif;
            position: relative;
            font-size: 50px;
            font-weight: bold;
        }


        h2 {
            font-family: "Sinhala MN";
            font-weight: lighter;
        }

       
    </style>

    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://d3js.org/topojson.v3.min.js"></script>
    <script src="https://unpkg.com/jeezy@1.13.1/lib/jeezy.js"></script>
    <script src="https://unpkg.com/jeezy@1.13.1/lib/jeezy.min.js"></script>
    <script src="neighborhoods.js"></script>

  </head>
  <body>
    <h1>Homework 3</h1>
    <h2>Sydney Bednar (sb844), Victoria Eshun (vee4), Noorejehan Umar (nu44)</h2>


    <div class="title">
    <h1>[Title Here]</h1>
    
    <p> [Intro Here]
    </p>
    </div>
    <svg id="map", width = "800", height = "800"></svg>
    <script>
      const svg = d3.select("svg#map")
      const mapWidth = svg.attr("width")
      const mapHeight = svg.attr("height")
      const margins = { top: 10, right: 10, bottom: 40, left: 50 };

      const requestData = async () => {
        let restaurants = await d3.csv('boston_yelp.csv', d3.autoType)
        
        console.log(restaurants)

        const ma = await d3.json("ma.json");

        console.log(ma)

        const towns = await d3.json("cities.json");

        console.log(towns)


        var projection = d3.geoMercator().fitSize([mapWidth, mapHeight], towns)

        var path = d3.geoPath().projection(projection);

        var map = svg.append("g").attr("class", "map");
       

//       var neighborhoods = topojson.feature(ma, ma.objects.cb_2015_massachusetts_county_20m);


//       var projection = d3.geoMercator().fitSize([mapWidth, mapHeight], neighborhoods)

//       var path = d3.geoPath().projection(projection);

        var map = svg.append("g").attr("class", "map");

        map.selectAll("path")
            .data(towns.features)
            .enter()
            .append("path")
            .attr("id", d => d.properties.town)
            .attr("class", "neighborhood")
            .style("fill", "white")
            .attr( "stroke", "#999")
            .attr("d", path);


        restaurants.forEach( d => {
      
          d.Position = projection( [d.longitude, d.latitude] );
          
        });

        console.log(restaurants[0])
        
        // Draw circles using the Positions we just made
        map.selectAll("circle").data(restaurants)
          .join("circle")
          .attr("id", d => d.name)
          .attr("r", 3)
          .attr("fill", "forestgreen")
          .attr("opacity", 1)
          .attr("cx", d => d.Position[0])
          .attr("cy", d => d.Position[1]);
        

        
      }
      requestData();

    </script>
   
  </body>
</html>